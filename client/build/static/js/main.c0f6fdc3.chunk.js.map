{"version":3,"sources":["images/tardigrade.png","constants/header_constant.js","components/PageNav/PageNav.js","constants/algolia_config.js","components/FilterList/FilterList.js","constants/filter_constant.js","components/ResultItem/ResultItem.js","components/ResultList/ResultList.js","components/SearchBar/SearchBar.js","components/Search/Search.js","utils/Utils.js","components/Visualization/charts/BarChart.js","components/Visualization/charts/Interpolation.js","components/Visualization/charts/ZoomLine.js","firebase/firebase.js","firebase/FirestoreDocumentReader.js","components/Visualization/charts/StateDataParser.js","components/Visualization/charts/Geochart.js","components/Visualization/Visualization.js","App.js","index.js"],"names":["module","exports","HEADERS","PageNav","props","currentPage","setCurrentPage","className","onClick","map","item","index","key","SEARCH_CLIENT","algoliasearch","FILTER_ITEMS","label","component","RefinementList","attribute","limit","searchable","showMore","NumericMenu","items","end","start","FilterList","list","ResultItem","hit","href","data","link","target","rel","Highlight","ResultList","Hits","hitComponent","Pagination","SEARCHBOX_CONFIG","placeholder","SearchBar","src","tardigrade","alt","SearchBox","translations","Search","useState","showFilter","setShowFilter","InstantSearch","searchClient","indexName","generateRandomHexColor","color","i","Math","floor","random","MOCK_DATA","x","Date","y","BarChart","domainPadding","scale","dataComponent","style","fill","cartesianInterpolations","polarInterpolations","InterpolationSelect","currentValue","values","onChange","value","width","Interpolation","polar","setPolar","interpolation","setInterpolation","randomColor","e","type","id","event","checked","marginLeft","marginRight","htmlFor","stroke","size","a","b","ZoomLine","zoomDomain","setZoomDomain","containerComponent","zoomDimension","onZoomDomainChange","padding","top","left","right","bottom","brushDimension","brushDomain","onBrushDomainChange","tickFormat","getFullYear","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ads","GeochartAd","constructor","impressionsMin","this","toString","adConverter","toFirestore","ad","fromFirestore","snapshot","options","collection","withConverter","get","then","querySnapshot","forEach","doc","push","catch","err","console","log","states","Geochart","chartType","height","state","getData","enableRegionInteractivity","legend","textStyle","fontSize","resolution","region","tooltip","trigger","CHARTS_TABLE","Visualization","chartMap","row","rowIndex","col","colIndex","App","process","pageMap","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0f6fdc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tardigrade.bba9fc27.png\";","const HEADERS = ['Ads Search', 'Data Visualization'];\n\nexport { HEADERS };\n","import './PageNav.css';\n\nimport { HEADERS } from '../../constants/header_constant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst PageNav = props => {\n  const { currentPage, setCurrentPage } = props;\n\n  return (\n    <div className=\"header\">\n      <h2 className=\"logo-text\" onClick={() => setCurrentPage(HEADERS[0])}>\n        Tardigrade\n      </h2>\n      <div className=\"search-body\">\n        {HEADERS.map((item, index) => (\n          <p\n            className={currentPage === item ? 'selected-header' : ''}\n            key={index}\n            onClick={() => setCurrentPage(item)}\n          >\n            {item}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nPageNav.propTypes = {\n  currentPage: PropTypes.string,\n  setCurrentPage: PropTypes.func,\n};\n\nexport default PageNav;\n","import algoliasearch from 'algoliasearch/lite';\n\nconst SEARCH_CLIENT = algoliasearch(\n  'E82P8D3AVW',\n  '18f48284be85f748f3201280dc0938ce'\n);\n\nconst DEV_INDEX = 'dev_ADS';\nconst PROD_INDEX = 'prod_ADS';\n\nexport { SEARCH_CLIENT, DEV_INDEX, PROD_INDEX };\n","import './FilterList.css';\n\nimport { COST, IMPRESSIONS } from '../../constants/filter_constant';\nimport { NumericMenu, RefinementList } from 'react-instantsearch-dom';\n\nimport React from 'react';\n\nconst FILTER_ITEMS = [\n  {\n    label: 'U.S States',\n    component: (\n      <RefinementList\n        attribute=\"data.geoTarget\"\n        limit={5}\n        searchable\n        showMore\n      />\n    ),\n  },\n  {\n    label: 'Impressions',\n    component: (\n      <NumericMenu attribute=\"data.impressionsMin\" items={IMPRESSIONS} />\n    ),\n  },\n  {\n    label: 'USD Spent',\n    component: <NumericMenu attribute=\"data.spendMin\" items={COST} />,\n  },\n  {\n    label: 'Gender',\n    component: <RefinementList attribute=\"data.genderTarget\" />,\n  },\n];\n\nconst FilterList = () => {\n  const list = FILTER_ITEMS.map((item, index) => (\n    <div className=\"filter-item\" key={index}>\n      <p className=\"filter-text\">{item.label}</p>\n      {item.component}\n    </div>\n  ));\n\n  return <div className=\"search-panel-filters\">{list}</div>;\n};\n\nexport default FilterList;\n","const IMPRESSIONS = [\n  { label: 'All' },\n  { label: '≤ 10K', end: 10000 },\n  { label: '10K - 100K', start: 10001, end: 100000 },\n  { label: '100K - 1M', start: 100001, end: 1000000 },\n  { label: '1M - 10M', start: 1000001, end: 10000000 },\n  { label: '> 10M', start: 10000001 },\n];\n\nconst COST = [\n  { label: 'All' },\n  { label: '≤ $100', start: 0, end: 100 },\n  { label: '$100 - $1,000', start: 101, end: 1000 },\n  { label: '$1,000 - $50,000', start: 1001, end: 50000 },\n  { label: '$50,000 - $100,000', start: 50001, end: 100000 },\n  { label: '> $100,000', start: 100001 },\n];\n\nexport { IMPRESSIONS, COST };\n","import './ResultItem.css';\n\nimport { Highlight } from 'react-instantsearch-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n/* Algolia's Hit: display a result item from search */\nfunction ResultItem(props) {\n  // a hit (result) object that contains all info about a result item\n  const { hit } = props;\n\n  return (\n    <div className=\"result-item-container\">\n      <a\n        href={`https://www.${hit.data.link}`}\n        className=\"highlight-header\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Highlight attribute=\"data.headline\" hit={hit} />\n      </a>\n      <p className=\"highlight-body\">\n        <Highlight attribute=\"data.content\" hit={hit} />\n      </p>\n    </div>\n  );\n}\n\nResultItem.propTypes = {\n  hit: PropTypes.object.isRequired,\n};\n\nexport default ResultItem;\n","import './ResultList.css';\n\nimport { Hits, Pagination } from 'react-instantsearch-dom';\n\nimport React from 'react';\nimport ResultItem from '../ResultItem/ResultItem';\n\nconst ResultList = () => (\n  <div className=\"search-panel-results center\">\n    <Hits hitComponent={ResultItem} />\n    <div className=\"pagination\">\n      <Pagination />\n    </div>\n  </div>\n);\n\nexport default ResultList;\n","import './SearchBar.css';\n\nimport React from 'react';\nimport { SearchBox } from 'react-instantsearch-dom';\nimport tardigrade from '../../images/tardigrade.png';\n\nconst SEARCHBOX_CONFIG = {\n  placeholder: 'Search Ads...',\n};\n\nconst SearchBar = () => (\n  <div className=\"search-header center\">\n    <img src={tardigrade} className=\"logo\" alt=\"logo\" />\n    <SearchBox className=\"searchbox\" translations={SEARCHBOX_CONFIG} />\n  </div>\n);\n\nexport default SearchBar;\n","import './Search.css';\n\nimport { PROD_INDEX, SEARCH_CLIENT } from '../../constants/algolia_config';\nimport React, { useState } from 'react';\n\nimport FilterList from '../FilterList/FilterList';\nimport { InstantSearch } from 'react-instantsearch-dom';\nimport ResultList from '../ResultList/ResultList';\nimport SearchBar from '../SearchBar/SearchBar';\n\nconst Search = () => {\n  const [showFilter, setShowFilter] = useState(true);\n\n  const handleFilterToggle = () => {\n    setShowFilter(!showFilter);\n  };\n\n  return (\n    <div className=\"search-container\">\n      <div className=\"container\">\n        <InstantSearch searchClient={SEARCH_CLIENT} indexName={PROD_INDEX}>\n          <h3 className=\"filter-header\" onClick={handleFilterToggle}>\n            {`(${showFilter ? '-' : '+'}) FILTERS`}\n          </h3>\n          <SearchBar />\n          <div className=\"search-body\">\n            {showFilter && <FilterList />}\n            <ResultList />\n          </div>\n        </InstantSearch>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","/**\n * generate a random hex color\n * @returns {string} hex color string\n */\nconst generateRandomHexColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nexport { generateRandomHexColor };\n","import { Bar, VictoryBar, VictoryChart } from 'victory';\n\nimport React from 'react';\nimport { generateRandomHexColor } from '../../../utils/Utils';\n\nconst MOCK_DATA = [\n  { x: new Date(1986, 1, 1), y: 2 },\n  { x: new Date(1996, 1, 1), y: 3 },\n  { x: new Date(2006, 1, 1), y: 5 },\n  { x: new Date(2016, 1, 1), y: 4 },\n];\n\n/*\n * Visualization & Doc:\n * https://formidable.com/open-source/victory/gallery/alternative-events\n */\nconst BarChart = () => (\n  <div className=\"chart\">\n    <VictoryChart domainPadding={{ x: 50, y: [0, 20] }} scale={{ x: 'time' }}>\n      <VictoryBar\n        dataComponent={<Bar />}\n        style={{ data: { fill: generateRandomHexColor() } }}\n        data={MOCK_DATA}\n      />\n    </VictoryChart>\n  </div>\n);\n\nexport default BarChart;\n","import React, { useState } from 'react';\nimport { VictoryChart, VictoryLine, VictoryScatter } from 'victory';\n\nimport PropTypes from 'prop-types';\nimport { generateRandomHexColor } from '../../../utils/Utils';\n\nconst MOCK_DATA = [\n  { x: 0, y: 0 },\n  { x: 1, y: 2 },\n  { x: 2, y: 1 },\n  { x: 3, y: 4 },\n  { x: 4, y: 3 },\n  { x: 5, y: 5 },\n];\n\nconst cartesianInterpolations = [\n  'basis',\n  'bundle',\n  'cardinal',\n  'catmullRom',\n  'linear',\n  'monotoneX',\n  'monotoneY',\n  'natural',\n  'step',\n  'stepAfter',\n  'stepBefore',\n];\n\nconst polarInterpolations = ['basis', 'cardinal', 'catmullRom', 'linear'];\n\nconst InterpolationSelect = ({ currentValue, values, onChange }) => (\n  <select\n    onChange={onChange}\n    value={currentValue}\n    style={{ width: 'fit-content' }}\n  >\n    {values.map(value => (\n      <option value={value} key={value}>\n        {value}\n      </option>\n    ))}\n  </select>\n);\n\nInterpolationSelect.propTypes = {\n  currentValue: PropTypes.string,\n  values: PropTypes.array,\n  onChange: PropTypes.func,\n};\n\n/*\n * Visualization & Doc:\n * https://formidable.com/open-source/victory/gallery/interpolation\n */\nconst Interpolation = () => {\n  const [polar, setPolar] = useState(false);\n  const [interpolation, setInterpolation] = useState('linear');\n  const randomColor = generateRandomHexColor();\n\n  return (\n    <div className=\"chart\">\n      <div>\n        <InterpolationSelect\n          currentValue={interpolation}\n          values={polar ? polarInterpolations : cartesianInterpolations}\n          onChange={e => setInterpolation(e.target.value)}\n        />\n        <input\n          type=\"checkbox\"\n          id=\"polar\"\n          value={polar}\n          onChange={event => {\n            setPolar(event.target.checked);\n            setInterpolation('linear');\n          }}\n          style={{ marginLeft: 25, marginRight: 5 }}\n        />\n        <label className=\"interpolation-label\" htmlFor=\"polar\">\n          polar\n        </label>\n      </div>\n      <VictoryChart polar={polar}>\n        <VictoryLine\n          interpolation={interpolation}\n          data={MOCK_DATA}\n          style={{ data: { stroke: randomColor } }}\n        />\n        <VictoryScatter\n          data={MOCK_DATA}\n          size={5}\n          style={{ data: { fill: randomColor } }}\n        />\n      </VictoryChart>\n    </div>\n  );\n};\n\nexport default Interpolation;\n","import React, { useState } from 'react';\nimport {\n  VictoryAxis,\n  VictoryBrushContainer,\n  VictoryChart,\n  VictoryLine,\n  VictoryZoomContainer,\n} from 'victory';\n\nimport { generateRandomHexColor } from '../../../utils/Utils';\n\nconst MOCK_DATA = [\n  { a: new Date(1982, 1, 1), b: 125 },\n  { a: new Date(1987, 1, 1), b: 257 },\n  { a: new Date(1993, 1, 1), b: 345 },\n  { a: new Date(1997, 1, 1), b: 515 },\n  { a: new Date(2001, 1, 1), b: 132 },\n  { a: new Date(2005, 1, 1), b: 305 },\n  { a: new Date(2011, 1, 1), b: 270 },\n  { a: new Date(2015, 1, 1), b: 470 },\n];\n\n/*\n * Visualization & Doc:\n * https://formidable.com/open-source/victory/gallery/brush-and-zoom\n */\nconst ZoomLine = () => {\n  const [zoomDomain, setZoomDomain] = useState({\n    x: [new Date(1990, 1, 1), new Date(2009, 1, 1)],\n  });\n  const randomColor = generateRandomHexColor();\n\n  return (\n    <div className=\"chart search-body center\">\n      <VictoryChart\n        scale={{ x: 'time' }}\n        containerComponent={\n          <VictoryZoomContainer\n            zoomDimension=\"x\"\n            zoomDomain={zoomDomain}\n            onZoomDomainChange={setZoomDomain}\n          />\n        }\n      >\n        <VictoryLine\n          style={{\n            data: { stroke: randomColor },\n          }}\n          data={MOCK_DATA}\n          x=\"a\"\n          y=\"b\"\n        />\n      </VictoryChart>\n      <VictoryChart\n        padding={{ top: 0, left: 50, right: 50, bottom: 30 }}\n        scale={{ x: 'time' }}\n        containerComponent={\n          <VictoryBrushContainer\n            brushDimension=\"x\"\n            brushDomain={zoomDomain}\n            onBrushDomainChange={setZoomDomain}\n          />\n        }\n      >\n        <VictoryAxis tickFormat={x => new Date(x).getFullYear()} />\n        <VictoryLine\n          style={{\n            data: { stroke: randomColor },\n          }}\n          data={[\n            { key: new Date(1982, 1, 1), b: 125 },\n            { key: new Date(1987, 1, 1), b: 257 },\n            { key: new Date(1993, 1, 1), b: 345 },\n            { key: new Date(1997, 1, 1), b: 515 },\n            { key: new Date(2001, 1, 1), b: 132 },\n            { key: new Date(2005, 1, 1), b: 305 },\n            { key: new Date(2011, 1, 1), b: 270 },\n            { key: new Date(2015, 1, 1), b: 470 },\n          ]}\n          x=\"key\"\n          y=\"b\"\n        />\n      </VictoryChart>\n    </div>\n  );\n};\n\nexport default ZoomLine;\n","import 'firebase/analytics';\nimport 'firebase/firestore';\nimport * as firebase from 'firebase/app';\n\n// Configure Firebase. \nconst config = {\n  apiKey: \"AIzaSyCR9KXK2iDuaZ3n6WNzZnBORbtpgWE7dvI\",\n  authDomain: \"step9-2020-capstone.firebaseapp.com\",\n  databaseURL: \"https://step9-2020-capstone.firebaseio.com\",\n  projectId: \"step9-2020-capstone\",\n  storageBucket: \"step9-2020-capstone.appspot.com\",\n  messagingSenderId: \"809132251307\",\n  appId: \"1:809132251307:web:f4e030446f07e1f9063fee\",\n  measurementId: \"G-GE5SS0J0F4\"\n};\n\n// Initialize Firebase.\nconst app = firebase.initializeApp(config);\nconst database = firebase.firestore();\nfirebase.analytics();\n\nexport { app, database };","/**\n * Description: FirestoreDocumentReader reads a firestore collection and converts them\n *              into custom ad objects.\n * Author: Kira Toal\n * Date: 2020/07/14\n */\n\nimport { app, database } from './firebase';\n\nconst COLLECTION = \"testing\";\nlet ads = []; \n\n/**\n * Firestore documents are read into ad objects for convenience.\n * .withConverter allows Firestore documents to be read in as individual objects as\n *         opposed to one large object.\n * Custom Ad objects are necessary for .withConverter.\n */\nclass GeochartAd {\n  constructor(id, impressionsMin) {\n  /**\n   * @param {string} id\n   * @param {long} impressionsMin\n   */\n    this.id = id;\n    this.impressionsMin = impressionsMin;\n  }\n  toString() {\n    return this.id + ', ' + this.impressionsMin;\n  }\n}\n\n// Firestore data converter converts snapshots to custom objects.\nconst adConverter = {\n  toFirestore: function(ad) {\n    return {\n      id: ad.id,\n      impressionsMin: ad.impressionsMin,\n    }\n  },\n  fromFirestore: function(snapshot, options){\n    const data = snapshot.data(options);\n    return new GeochartAd(data.id, data.impressionsMin)\n  }\n}\n\ndatabase.collection(COLLECTION).withConverter(adConverter).get().then(function(querySnapshot) {\n  querySnapshot.forEach(function(doc) { \n    // doc.data() is never undefined for query doc snapshots.\n    ads.push(doc.data()); // Push ad object to ads array.\n  });\n}).catch(err => console.log(err));\n\nexport { ads };","/**\n * Description: StateDataParser will sort through ad documents and compile a \n *               dictionary with the following properties for each state:\n *                  (1) Average minimum impressions \n *                  (2) Average maximum impressions\n *                  (3) Average minimum ad spend\n *                  (4) Average maximum ad spend\n *              Currently, StateDataParser contains only a dictionary of US states and territories.\n * Author: Kira Toal\n * Date: 2020/07/13\n */\n\nconst states = {\n  'Alabama': 0,\n  'Alaska': 0,\n  'American Samoa': 0,\n  'Arizona': 0,\n  'Arkansas': 0,\n  'California': 0,\n  'Colorado': 0,\n  'Connecticut': 0,\n  'Delaware': 0,\n  'District of Columbia': 0,\n  'Federated States of Micronesia': 0,\n  'Florida': 0,\n  'Georgia': 0,\n  'Guam': 0,\n  'Hawaii': 0,\n  'Idaho': 0,\n  'Illinois': 0,\n  'Indiana': 0,\n  'Iowa': 0,\n  'Kansas': 0,\n  'Kentucky': 0,\n  'Louisiana': 0,\n  'Maine': 0,\n  'Marshall Islands': 0,\n  'Maryland': 0,\n  'Massachusetts': 0,\n  'Michigan': 0,\n  'Minnesota': 0,\n  'Mississippi': 0,\n  'Missouri': 0,\n  'Montana': 0,\n  'Nebraska': 0,\n  'Nevada': 0,\n  'New Hampshire': 0,\n  'New Jersey': 0,\n  'New Mexico': 0,\n  'New York': 0,\n  'North Carolina': 0,\n  'North Dakota': 0,\n  'Northern Mariana Islands': 0,\n  'Ohio': 0,\n  'Oklahoma': 0,\n  'Oregon': 0,\n  'Palau': 0,\n  'Pennsylvania': 0,\n  'Puerto Rico': 0,\n  'Rhode Island': 0,\n  'South Carolina': 0,\n  'South Dakota': 0,\n  'Tennessee': 0,\n  'Texas': 0,\n  'Utah': 0,\n  'Vermont': 0,\n  'Virgin Island': 0,\n  'Virginia': 0,\n  'Washington': 0,\n  'West Virginia': 0,\n  'Wisconsin': 0,\n  'Wyoming': 0\n};\n\nexport { states };","/** \n * Description: Geochart implements a Google geochart component.\n * Author: Kira Toal\n * Date: 2020/07/13\n */\n\nimport { ads } from '../../../firebase/FirestoreDocumentReader';\nimport { Chart } from \"react-google-charts\";\nimport firebase from '../../../firebase/firebase';\nimport React from 'react';\nimport { states } from './StateDataParser';\n\nconst Geochart = () => {\n  /*\n   * Currently, getData assigns a meaningless random number to each state.\n   * In the future, once the states dictionary contains ad information, getData will\n   *    retrieve information such as minimum ad impressions and maximum ad spend.\n   */ \n  function getData() {\n    let data = [[\"State\", \"Random Number\"]];\n    for (let state in states) {  \n      data.push([state, Math.floor(Math.random() * Math.floor(1000))]);\n    }\n    return data;\n  }\n\n  const options = {\n    enableRegionInteractivity: true,\n    legend: {textStyle: {color: 'black', fontSize: 10}},     \n    resolution: 'provinces',\n    region:'US',\n    tooltip: {trigger:'focus'} // Trigger info box on mouse hover over state.\n  };\n\n  return (\n    <div className=\"search-header center\">\n      <p>Impressions Geochart</p>\n      <Chart chartType=\"GeoChart\" width=\"700px\" height=\"400px\" data={getData()} options={options} />\n    </div>\n  );\n};\n\nexport default Geochart;","import './Visualization.css';\n\nimport { Col, Container, Row } from 'react-grid-system';\n\nimport BarChart from './charts/BarChart';\nimport Interpolation from './charts/Interpolation';\nimport React from 'react';\nimport ZoomLine from './charts/ZoomLine';\nimport Geochart from './charts/Geochart';\nimport tardigrade from '../../images/tardigrade.png';\n\n\n// Charts are presented as a grid, with each row containing one or many charts\nconst CHARTS_TABLE = [\n  ['Zoomable Line'], // first row, 1 column\n  ['Interpolation', 'Vertical Bar'], // second row, 2 columns\n  ['Geochart'],\n];\n\nconst Visualization = () => {\n  const chartMap = {\n    'Zoomable Line': <ZoomLine />,\n    'Interpolation': <Interpolation />,\n    'Vertical Bar': <BarChart />,\n    'Geochart': <Geochart />,\n  };\n\n  return (\n    <div className=\"search-header center\">\n      <img src={tardigrade} className=\"logo\" alt=\"logo\" />\n      <Container>\n        {CHARTS_TABLE.map((row, rowIndex) => (\n          <Row key={rowIndex}>\n            {row.map((col, colIndex) => (\n              <Col key={colIndex}>\n                <div className=\"chart-container\">{chartMap[col]}</div>\n              </Col>\n            ))}\n          </Row>\n        ))}\n      </Container>\n    </div>\n  );\n};\n\nexport default Visualization;","import './App.css';\n\nimport React, { useState } from 'react';\n\nimport PageNav from './components/PageNav/PageNav';\nimport Search from './components/Search/Search';\nimport Visualization from './components/Visualization/Visualization';\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('Ads Search');\n\n  console.log(process.env.NODE_ENV);\n\n  const pageMap = {\n    'Ads Search': <Search />,\n    'Data Visualization': <Visualization />,\n  };\n\n  return (\n    <div>\n      <PageNav currentPage={currentPage} setCurrentPage={setCurrentPage} />\n      {pageMap[currentPage]}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}